{"version":3,"sources":["api/pokemonApi.js","assets/img/nicolasalegre.jpg","components/Title.js","components/Search.js","components/Error.js","components/PokemonCard.js","components/Loading.js","pages/Landing.js","App.js","index.js"],"names":["getAllPokemons","key","count","a","fetch","res","json","getPokemon","url","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","avatar","display","margin","breakpoints","down","Title","classes","className","AppBar","position","style","backgroundColor","Container","justify","Toolbar","padding","fontSize","Typography","variant","id","href","Avatar","height","width","alt","src","Search","limit","setLimit","setSearch","onSearch","Grid","item","xs","marginBottom","fontWeight","container","TextField","size","label","onChange","event","target","value","FormControl","Select","labelId","MenuItem","Alert","props","elevation","marginTop","Error","isError","React","useState","open","setOpen","handleClose","reason","Snackbar","autoHideDuration","onClose","severity","require","maxWidth","minWidth","media","PokemonCard","name","useQuery","data","isLoading","Card","Skeleton","textAlign","sprites","front_default","back_default","weight","base_experience","abilities","map","index","ability","backdrop","zIndex","drawer","color","Loading","loading","Backdrop","CircularProgress","Landing","search","pokemon","setPokemon","setIsError","setCount","end","setEnd","allResultsPokemon","setAllResultsPokemon","controlNamePokemon","toLowerCase","indexOf","onSuccess","arrayResults","results","filter","length","slice","onError","error","refetch","Object","keys","Button","onClick","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.421bcf63.chunk.js","sourcesContent":["\n//GET ALL POKEMONS FROM THE API\n//Return: array of pokemons with name and url\nexport const getAllPokemons = async (key, count) =>{\n    const res = await fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${count}`);\n    return res.json()\n}\n\n\n//GET THE DETAIL OF ONE POKEMON FROM THE API\n//Return: pokemon\nexport const getPokemon = async (key, url) =>{\n    const res = await fetch(url);\n    return res.json()\n}","export default __webpack_public_path__ + \"static/media/nicolasalegre.78e64e01.jpg\";","import React from 'react';\n\nimport {Container, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport src from '../assets/img/nicolasalegre.jpg'\n\n//ESTO SE UTILIZA PARA DARLE ESTILO A LA NAVBAR\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    avatar: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    [theme.breakpoints.down('sm')]:{\n      avatar: {display:'none'}\n    },\n  }));\n\nexport const Title = () => {\n  const classes = useStyles();  \n\n  return ( \n      <>\n    <div className={classes.root}>\n        <AppBar position=\"static\" style={{backgroundColor:\"#3f51b5\"}}>\n          <Container justify='center'>\n            <Toolbar style={{padding:0}}>\n                <h1 style={{fontSize: '40px'}}>Pokemon Finder</h1>\n                <Typography variant=\"h6\" className={classes.title}>\n                </Typography>\n                \n                <div>\n                    <label><b>Author:</b></label><br/>\n                    <label id='a-name'>Nicol√°s Alegre</label><br/>\n                    <a id='a-href' href='https://github.com/nicmalegre/api-pokemon'>Link to GitHub</a>\n                </div>\n                <div className={classes.avatar}>\n                    <Avatar id=\"avatar\" style={{height: '70px', width: '70px'}} alt=\"Nicolas Alegre\" src={src} />\n                </div>\n            </Toolbar>\n          </Container>\n        </AppBar>\n      </div> \n      </>\n  )\n}\n\n","import React from 'react'\n\n//Import from Material-ui\nimport { FormControl, Select} from '@material-ui/core/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\n\nexport const Search = ({limit, count,setLimit, onSearch, setSearch}) => {\n\n    //Save the input state in the search state\n    const handleChangeInput = (event) =>{\n        setSearch(event.target.value)\n    }\n\n    //When the select change, we save the new limit\n    const handleChangeSelect = (event) => {\n        setLimit(event.target.value);\n    };\n    \n    return (\n        <Grid item xs={12} style={{marginBottom: 40}}>\n          <p style={{fontSize: '24px', fontWeight: 'lighter'}}>El que quiere Pokemon, que los busque.</p>\n          <Grid container justify=\"center\">\n              <TextField \n              id=\"outlined-basic\" \n              variant=\"outlined\"  \n              size='small' \n              style={{width: '70%', marginRight: 20}} \n              label='Ingrese el nombre a buscar'\n              onChange={handleChangeInput}\n              />\n            <FormControl variant=\"outlined\"  size='small'>\n              \n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={limit}\n                onChange={handleChangeSelect}\n                size=\"small\"\n              > \n                <MenuItem value={10}>10</MenuItem>\n                <MenuItem value={20}>20</MenuItem>\n                <MenuItem value={30}>30</MenuItem>\n                <MenuItem value={50}>50</MenuItem>\n                <MenuItem value={75}>75</MenuItem>\n                <MenuItem value={100}>100</MenuItem>\n                <MenuItem value={200}>200</MenuItem>\n                \n                {(limit >= 200) && (\n                  <MenuItem value={limit}>{limit}</MenuItem>\n                )}\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          \n        </Grid>\n    )\n\n\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport const Error = ({isError}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(isError);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar \n      open={open} \n      autoHideDuration={6000} \n      onClose={handleClose}>\n        <Alert severity=\"error\" onClose={handleClose}>Ha ocurrido un error. Por favor vuelva a intentarlo.</Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\n\n/* IMPORT FROM MATERIAL-UI */\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\n\nimport {useQuery} from 'react-query'\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport {Error} from './Error'\n\n//Import getPokemon method from api folder\nconst {getPokemon} = require('../api/pokemonApi')\n\n\n/* STYLES FOR THE CARD IMPORT FROM MATERIAL-UI */\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 320,\n      minWidth:240,\n      display: 'inline-block',\n      margin: 15,\n      padding: 15,\n      \n    },\n    media: {\n      height: 140,\n    },\n  });\n\n\nexport const PokemonCard = ({name, url}) => {\n    \n    const classes = useStyles(); //We need to declare this in order to use\n\n    const {data, isLoading, isError} = useQuery(['pokemon-'+name, url], getPokemon) //Use react-query for get all the pokemons\n    if (isError) return <Error />\n  \n    return ( \n        \n      <Card className={classes.root}>\n        {(isLoading) ? (\n          <Grid>\n            <Skeleton variant=\"circle\" width={40} height={40} style={{marginBottom:5, display: 'inline-block'}}/>\n            <Skeleton variant=\"circle\" width={40} height={40} style={{marginBottom:5, display: 'inline-block'}}/>\n            <Skeleton variant=\"rect\" width={210} height={118} />\n          </Grid>\n        ):(\n          <>\n            <div style={{textAlign: 'center'}}>\n                <img height='120px' src={data.sprites.front_default} alt=''/>\n                <img height='120px' src={data.sprites.back_default} alt=''/>\n            </div>\n            <p><b>Name:</b> {data.name}</p>\n            <p><b>Height:</b> {data.height}</p>\n            <p><b>Weight:</b> {data.weight}</p>\n            <p><b>Base Experience:</b> {data.base_experience}</p>\n            <p><b>Abilities: </b></p> \n            <ul>\n                {data.abilities.map((a,index) =>{ \n                    return (\n                        <li key={index}>{a.ability.name}</li>\n                    )\n                })}\n            </ul>\n          </>\n        )\n        }\n      </Card> \n\n  );\n}\n ","import React from 'react'\n\n//Import from Material-UI\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n/* STYLE FOR BACKDROP */\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n    },\n}));\n\n\nexport const Loading = ({loading}) => {\n    const classes = useStyles(); //This is for the material-ui styles \n\n    return(\n        <>\n        {/* This component will display when the API is loading */}\n            <Backdrop className={classes.backdrop} open={loading}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        {/* End Backdrop */}\n        </>\n    )\n\n\n}\n\n","import React, {useState} from 'react'; //Import the hook\nimport {Title, Search, PokemonCard, Loading, Error} from '../components'\n\n//For the GET to the API\nimport {useQuery} from 'react-query'\n\n/* IMPORT FROM MATERIAL-UI */\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button'\n\n//Import getAllPokemons method from api folder\nconst {getAllPokemons} = require('../api/pokemonApi')\n\nexport const  Landing = () => {\n  const [search, setSearch] = useState('') //State for save the search user input\n  const [pokemon, setPokemon] = useState([]) //State for save all the information for every pokemon\n  const [isError, setIsError] = useState(false) //State for save if we have an error\n  const [count, setCount] = useState(0) //State for save the total numbers of pokemons in the api\n  const [limit, setLimit] = useState(50) //State for save the limit of the results that we have to show\n  const [end, setEnd] = useState(limit)\n  const [allResultsPokemon, setAllResultsPokemon] = useState([])\n\n  //Function to filter the names of the pokemons\n  const controlNamePokemon = (pokemon) =>{\n    return ((pokemon.name).toLowerCase().indexOf(search.toLowerCase()) > -1 )\n}\n\n  //Function for GET the information detail from every pokemon\n  const onSuccess = async (data) => {\n    let arrayResults = data.results\n    if(count !== data.count){\n      setCount(data.count)\n    }\n\n    if(search !== \"\"){ \n      arrayResults = data.results.filter(controlNamePokemon) //If not empty, we apply the filter\n    }\n\n\n   \n\n    if (arrayResults.length > limit){ //If we have more result than the limit, just slice \n      setPokemon(() => arrayResults.slice(0,limit)) //Show only 200 pokemons \n    }else{\n      setPokemon(arrayResults)\n    }\n\n    setAllResultsPokemon(arrayResults) //Save all the results \n  }\n    \n  const onError = (error) =>{\n    setIsError(true)\n  }\n\n  const {isLoading, refetch} = useQuery(['getAllPokemons', count, search, limit], getAllPokemons, {onSuccess, onError}) //Use react-query for get all the pokemons\n\n  const onViewMore = () =>{\n    setLimit(limit+50)\n    setEnd(end+50)\n    setPokemon(allResultsPokemon.slice(0,end))    \n  }\n\n  return (\n    <>\n    <Title />\n    <Container style={{marginTop: 10}}>\n      <Error isError={isError} />\n      <Loading loading={isLoading}/>\n      <Grid container justify=\"center\">\n        <Search \n        limit={limit} \n        setLimit={setLimit} \n        count={count} \n        onSearch={refetch}\n        setSearch={setSearch}\n        />\n        {(Object.keys(pokemon).length === 0) ? (\n          <p style={{fontWeight: 'light'}}>No se han encontrado resultados con coincidan con su busqueda.</p>\n        ):(\n          <>\n          {pokemon.map(({name, url},index) => (\n            <PokemonCard key={name} url={url}/>\n          ))}\n          {(limit >= 200) && (\n            <Grid container justify=\"center\">\n              <Grid container justify=\"center\" style={{marginTop:20, marginBottom:20}}>\n                <Button onClick={onViewMore} variant=\"contained\" >Ver M√°s ...</Button>\n              </Grid>\n            </Grid>          \n          )}\n          </>\n        )}\n      </Grid>\n    </Container>\n    </>\n  );\n}\n\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { Landing } from \"./pages/Landing\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/\">\n            <Landing />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}